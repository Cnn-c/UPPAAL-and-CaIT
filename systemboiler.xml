<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int N=6;
urgent chan trp[N],endp[N];//用于从parallel部分，对于process的触发，以及得到process的回应
chan tr[14],endtr[14];//单个action 的触发和触发完毕
broadcast chan a;//并发触发的通道
typedef int [0,N-1] pid_t; // Process IDs
int X[N][3]={{0,1,2},{2,0,4},{0,1,0},{0,1,0},{0,0,1},{0,0,0}
};//可扩
chan trs[2];
int cv=0;//locchannel 交互时传递的值
int brcv=0;//brochannel 交互时传递的值
broadcast chan broc[4];//第一个为b,第二个为g,第三个是c1,第四个是c2
int loc=1;//现在只有一个点，这个点的位置；利用全局变量loc表示；在增加点的时候可以利用数组表示
chan c[4];//这里定义了4个local channel,可以根据需求定义多个,若想要进行点之间的区分，可以定义不同的channel,sensor,actuator的数组，用于私有化表示
int boiler=0;
int prolen[N]={4,21,16,7,5,5};//process的终止下标
int proread[N]={0,0,0,0,0,0};//当前要读的
int currentid=0;//当前进程的id
typedef int [0,13] aid_t; // action ID
int model=0;
int readsensorvalue=0;
int sensorid=0;
int [0,37] tempeature;
const int throsad=26;
typedef struct
{
aid_t id;//action id,用于区分和触发action
int channel;//channel 的下标
int value;//channel要发送发的值，或者移动action要移动的位置
int next1;//成功执行下一个动作的存储位置，下标
int next2;//不成功执行下一个动作的存储位置，下标

} action;//sensor类型定义

action prolist[N][22];//2个进程，每个进程按照最大的定义动作个数
typedef int [0,1] id_t;
int querylocation=0;//用于查询到的位置信息的传递
//以下是对于sensor的处理
typedef struct
{
  int id;
int  value;
} sensor;//sensor类型定义
sensor sentable[N][2]; //Process1 的 Sensor table
int len1 = 2;   // Length of the Sensor Table
//现在就3个都认为是tempature,这个可以根据需要进行调整
void Initialsensor()
{
int i=0;
for(i=0;i&lt;N;i++){
sentable[i][0].id=0;
sentable[i][1].id=1;
sentable[i][0].value=26;
sentable[i][1].value=10;
}
sentable[0][0].value=model;//mode sensor
sentable[1][0].value=tempeature; // temp sensor
}
int Querysensor(int proid,int id1)
{
return  sentable[1][1].value;
}

void Updatesensor(int proid,int id,int valu){
int i;
for(i=0;i&lt;len1;i++){
if(sentable[proid][i].id==id)
 sentable[proid][i].value=valu;
}
}


typedef struct
{
  id_t id;
  int value;
} actuator;//actuator类型定义



//对于actuator的操作
actuator actable[N][1]; //Actuator table，也只有两个
int showact[N][1]={{0},  {0},{0},  {0},{0},  {0}};
int len2 = 1;   // Length of the Actuator Table.
//先定义三个，作为light1,lightt2以及boiler;初始值都为关的状态//
void Initialactuator()
{
int i=0;
for(i=0;i&lt;N;i++){
actable[i][0].id=0;
actable[i][0].value=0;
}
actable[1][0].value=0;//开始时灯为灭boiler
actable[5][0].value=0;//开始时灯为灭boiler
actable[4][0].value=0;//开始时灯为灭boiler
}


int Queryactuator(int proid,int id1)
{
return  actable[proid][id1].value;
}

void Updateactuator(int proid,int id,int valu){
 actable[proid][id].value=valu;
}




//
/*
void initialpro(){
//if(id==0){
prolist[0][0].id=2;
prolist[0][0].channel=1;
prolist[0][0].value=1;//发送的变量的值
prolist[0][1].id=1;
prolist[0][1].channel=-1;//不使用channnl的都为-1
prolist[0][1].value=1;//要移动到的位置
prolist[0][2].id=0;//接受
prolist[0][2].channel=2;//接收使用的channel
prolist[0][2].value=2;//接收时的变量




prolist[0][0].id=9;
prolist[0][0].channel=0;//actuator 的下标
prolist[0][0].value= 37;//发送的变量的值
prolist[0][0].next1= 37;//发送的变量的值
prolist[0][0].next2= 37;//发送的变量的值
prolist[0][1].id=1;
prolist[0][1].channel=-1;//不使用channnl的都为-1
prolist[0][1].value=1;//要移动到的位置
prolist[0][2].id=10;//action id
prolist[0][2].channel=0;//要读的actuator的下标
prolist[0][2].value=0;//接收时的actuator的下标

//}
//if(id==1)
//{
prolist[1][0].id=0;
prolist[1][0].channel=1;
prolist[1][0].value=1;//发送的变量的值
prolist[1][1].id=5;
prolist[1][1].channel=-1;//不使用channnl的都为-1
prolist[1][1].value=1;//延迟的时间
prolist[1][2].id=2;//发
prolist[1][2].channel=2;//发使用的channel
prolist[1][2].value=2;//发的值,
//}
//if(id=2)
//{
prolist[2][0].id=3;
prolist[2][0].channel=1;
prolist[2][0].value=1;//接受到的值的保存
prolist[2][1].id=5;
prolist[2][1].channel=-1;//不使用channnl的都为-1
prolist[2][1].value=1;//延迟的时间
prolist[2][2].id=4;//发
prolist[2][2].channel=2;//发使用的channel
prolist[2][2].value=2;//发的值,

//}
//if(id==3)
//{

prolist[3][0].id=4;//发
prolist[3][0].channel=1;
prolist[3][0].value=1;//发送的变量的值
prolist[3][1].id=1;
prolist[3][1].channel=-1;//不使用channnl的都为-1
prolist[3][1].value=1;//延迟的时间
prolist[3][2].id=3;//收
prolist[3][2].channel=2;//收使用的channel
prolist[3][2].value=2;//收发的值,

//}
//else{
prolist[4][0].id=3;
prolist[4][0].channel=1;
prolist[4][0].value=1;//发送的变量的值
prolist[4][1].id=5;
prolist[4][1].channel=-1;//不使用channnl的都为-1
prolist[4][1].value=1;//延迟的时间
prolist[4][2].id=3;//收
prolist[4][2].channel=2;//收使用的channel
prolist[4][2].value=2;//收发的值,
//}
}*/
void initialpro(){

prolist[0][0].id=11;
prolist[0][0].channel=-1;
prolist[0][0].value=1;//发送的变量的值
prolist[0][0].next1=1;
prolist[0][0].next2=4;
prolist[0][1].id=7;
prolist[0][1].channel=0;//不使用channnl的都为-1
prolist[0][1].value=1;//要移动到的位置
prolist[0][1].next1=2;
prolist[0][1].next2=2;
prolist[0][2].id=4;
prolist[0][2].channel=0;//不使用channnl的都为-1
prolist[0][2].value=1;//要移动到的位置
prolist[0][2].next1=3;
prolist[0][2].next2=3;
prolist[0][3].id=5;
prolist[0][3].channel=-1;//不使用channnl的都为-1
prolist[0][3].value=1;//要移动到的位置
prolist[0][3].next1=4;
prolist[0][3].next2=4;




prolist[1][0].id=3;
prolist[1][0].channel=0;
prolist[1][0].value=1;//发送的变量的值
prolist[1][0].next1=1;
prolist[1][0].next2=17;
prolist[1][1].id=11;
prolist[1][1].channel=-1;//不使用channnl的都为-1
prolist[1][1].value=1;//要移动到的位置
prolist[1][1].next1=2;
prolist[1][1].next2=13;
prolist[1][2].id=9;
prolist[1][2].channel=0;
prolist[1][2].value=1;
prolist[1][2].next1=3;
prolist[1][2].next2=3;
prolist[1][3].id=5;
prolist[1][3].channel=-1;//不使用channnl的都为-1
prolist[1][3].value=1;//要移动到的位置
prolist[1][3].next1=4;
prolist[1][3].next2=4;
prolist[1][4].id=11;
prolist[1][4].channel=-1;//不使用channnl的都为-1
prolist[1][4].value=1;//要移动到的位置
prolist[1][4].next1=5;
prolist[1][4].next2=9;
prolist[1][5].id=3;
prolist[1][5].channel=0;
prolist[1][5].value=1;//发送的变量的值
prolist[1][5].next1=6;
prolist[1][5].next2=7;
prolist[1][6].id=12;
prolist[1][6].channel=-1;//不使用channnl的都为-1
prolist[1][6].value=-1;//要移动到的位置
prolist[1][6].next1=8;
prolist[1][6].next2=8;
prolist[1][7].id=12;
prolist[1][7].channel=-1;//不使用channnl的都为-1
prolist[1][7].value=-1;//要传入的值，这个值可以是用于判断
prolist[1][7].next1=8;
prolist[1][7].next2=8;
prolist[1][8].id=13;
prolist[1][8].channel=-1;//不使用channnl的都为-1
prolist[1][8].value=1;//要移动到的位置
prolist[1][8].next1=4;
prolist[1][8].next2=4;
prolist[1][9].id=7;
prolist[1][9].channel=0;//不使用channnl的都为-1
prolist[1][9].value=2;//要移动到的位置
prolist[1][9].next1=10;
prolist[1][9].next2=10;
prolist[1][10].id=11;
prolist[1][10].channel=-1;//不使用channnl的都为-1
prolist[1][10].value=2;//要移动到的位置
prolist[1][10].next1=11;
prolist[1][10].next2=12;                                                            
prolist[1][11].id=9;
prolist[1][11].channel=0;
prolist[1][11].value=1;//发送的变量的值
prolist[1][11].next1=0;
prolist[1][11].next2=0;
prolist[1][12].id=9;
prolist[1][12].channel=0;//不使用channnl的都为-1
prolist[1][12].value=0;//要移动到的位置
prolist[1][12].next1=0;
prolist[1][12].next2=0;
prolist[1][13].id=7;
prolist[1][13].channel=0;//不使用channnl的都为-1
prolist[1][13].value=2;//要传入的值，这个值可以是用于判断
prolist[1][13].next1=14;
prolist[1][13].next2=14;
prolist[1][14].id=11;
prolist[1][14].channel=-1;//不使用channnl的都为-1
prolist[1][14].value=2;//要移动到的位置
prolist[1][14].next1=15;
prolist[1][14].next2=16;
prolist[1][15].id=9;//点亮灯
prolist[1][15].channel=0;
prolist[1][15].value=1;//boiler亮
prolist[1][15].next1=21;
prolist[1][15].next2=21;
prolist[1][16].id=9;//熄灭灯
prolist[1][16].channel=0;//acttable[1][0]为boilewr
prolist[1][16].value=0;//boiler灭
prolist[1][16].next1=21;
prolist[1][16].next2=21;
prolist[1][17].id=7;
prolist[1][17].channel=0;//不使用channnl的都为-1
prolist[1][17].value=2;//要传入的值，这个值可以是用于判断
prolist[1][17].next1=18;
prolist[1][17].next2=18;
prolist[1][18].id=11;
prolist[1][18].channel=-1;//不使用channnl的都为-1
prolist[1][18].value=2;//要移动到的位置
prolist[1][18].next1=19;
prolist[1][18].next2=20;
prolist[1][19].id=9;
prolist[1][19].channel=0;//不使用channnl的都为-1
prolist[1][19].value=1;//要移动到的位置
prolist[1][19].next1=21;
prolist[1][19].next2=21;
prolist[1][20].id=9;
prolist[1][20].channel=0;//不使用channnl的都为-1
prolist[1][20].value=0;//要移动到的位置
prolist[1][20].next1=21;
prolist[1][20].next2=21;


prolist[2][0].id=6;
prolist[2][0].channel=-1;
prolist[2][0].value=0;//发送的变量的值
prolist[2][0].next1=1;
prolist[2][0].next2=1;
prolist[2][1].id=11;
prolist[2][1].channel=-1;//不使用channnl的都为-1
prolist[2][1].value=0;//要移动到的位置
prolist[2][1].next1=2;
prolist[2][1].next2=5;
prolist[2][2].id=1;
prolist[2][2].channel=-1;
prolist[2][2].value=2;
prolist[2][2].next1=3;
prolist[2][2].next2=4;
prolist[2][3].id=12;
prolist[2][3].channel=-1;//不使用channnl的都为-1
prolist[2][3].value=-1;//要移动到的位置
prolist[2][3].next1=15;
prolist[2][3].next2=15;
prolist[2][4].id=12;
prolist[2][4].channel=-1;//不使用channnl的都为-1
prolist[2][4].value=-1;//要移动到的位置
prolist[2][4].next1=15;
prolist[2][4].next2=15;
prolist[2][5].id=11;
prolist[2][5].channel=-1;
prolist[2][5].value=0;//发送的变量的值
prolist[2][5].next1=6;
prolist[2][5].next2=9;
prolist[2][6].id=1;
prolist[2][6].channel=-1;//不使用channnl的都为-1
prolist[2][6].value=3;//要移动到的位置
prolist[2][6].next1=7;
prolist[2][6].next2=8;
prolist[2][7].id=12;
prolist[2][7].channel=-1;//不使用channnl的都为-1
prolist[2][7].value=-1;//要传入的值，这个值可以是用于判断
prolist[2][7].next1=15;
prolist[2][7].next2=15;
prolist[2][8].id=12;
prolist[2][8].channel=-1;//不使用channnl的都为-1
prolist[2][8].value=-1;//要移动到的位置
prolist[2][8].next1=15;
prolist[2][9].id=1;
prolist[2][9].channel=-1;//不使用channnl的都为-1
prolist[2][9].value=4;//要移动到X[2][0]+1,注意检查
prolist[2][9].next1=10;
prolist[2][9].next2=11;
prolist[2][10].id=12;
prolist[2][10].channel=-1;//不使用channnl的都为-1
prolist[2][10].value=-1;//要移动到的位置
prolist[2][10].next1=15;
prolist[2][10].next2=15;
prolist[2][11].id=12;
prolist[2][11].channel=-1;//不使用channnl的都为-1
prolist[2][11].value=-1;//要移动到的位置
prolist[2][11].next1=15;
prolist[2][11].next2=15;                                                            
prolist[2][12].id=1;
prolist[2][12].channel=-1;
prolist[2][12].value=X[2][0]-1;//发送的变量的值
prolist[2][12].next1=13;
prolist[2][12].next2=14;
prolist[2][13].id=12;
prolist[2][13].channel=-1;//不使用channnl的都为-1
prolist[2][13].value=-1;//要移动到的位置
prolist[2][13].next1=15;
prolist[2][13].next2=15;
prolist[2][14].id=12;
prolist[2][14].channel=-1;//不使用channnl的都为-1
prolist[2][14].value=-1;//要传入的值，这个值可以是用于判断
prolist[2][14].next1=15;
prolist[2][14].next2=15;
prolist[2][15].id=6;
prolist[2][15].channel=-1;//不使用channnl的都为-1
prolist[2][15].value=0;//要移动到的位置
prolist[2][15].next1=16;
prolist[2][15].next2=16;

/*

prolist[2][0].id=6;
prolist[2][0].channel=-1;
prolist[2][0].value=0;//发送的变量的值
prolist[2][0].next1=1;
prolist[2][0].next2=1;
prolist[2][1].id=11;
prolist[2][1].channel=-1;//不使用channnl的都为-1
prolist[2][1].value=0;//要移动到的位置
prolist[2][1].next1=2;
prolist[2][1].next2=5;
prolist[2][2].id=1;
prolist[2][2].channel=-1;
prolist[2][2].value=1;
prolist[2][2].next1=9;
prolist[2][2].next2=3;
prolist[2][3].id=12;
prolist[2][3].channel=-1;//不使用channnl的都为-1
prolist[2][3].value=-1;//要移动到的位置
prolist[2][3].next1=9;
prolist[2][3].next2=9;
prolist[2][4].id=11;
prolist[2][4].channel=-1;
prolist[2][4].value=0;//发送的变量的值
prolist[2][4].next1=5;
prolist[2][4].next2=7;
prolist[2][5].id=1;
prolist[2][5].channel=-1;//不使用channnl的都为-1
prolist[2][5].value=3;//要移动到的位置
prolist[2][5].next1=0;
prolist[2][5].next2=6;
prolist[2][6].id=12;
prolist[2][6].channel=-1;//不使用channnl的都为-1
prolist[2][6].value=-1;//要传入的值，这个值可以是用于判断
prolist[2][6].next1=9;
prolist[2][6].next2=9;
prolist[2][7].id=1;
prolist[2][7].channel=-1;//不使用channnl的都为-1
prolist[2][7].value=0;//要移动到的位置
prolist[2][7].next1=0;
prolist[2][7].next2=8;
prolist[2][8].id=12;
prolist[2][8].channel=-1;//不使用channnl的都为-1
prolist[2][8].value=-1;//要移动到X[2][0]+1,注意检查
prolist[2][8].next1=9;
prolist[2][8].next2=9;
/*
prolist[2][9].id=1;
prolist[2][9].channel=-1;//不使用channnl的都为-1
prolist[2][9].value=0;//要移动到的位置
prolist[2][9].next1=0;
prolist[2][9].next2=10;
prolist[2][10].id=12;
prolist[2][10].channel=-1;//不使用channnl的都为-1
prolist[2][10].value=-1;//要移动到的位置
prolist[2][10].next1=0;
prolist[2][10].next2=0;                                                            









/*
prolist[3][0].id=6;
prolist[3][0].channel=-1;
prolist[3][0].value=0;//发送的变量的值
prolist[3][0].next1=1;
prolist[3][0].next2=1;
prolist[3][1].id=4;
prolist[3][1].channel=1;//不使用channnl的都为-1
prolist[3][1].value=0;//要移动到的位置
prolist[3][1].next1=2;
prolist[3][1].next2=2;
prolist[3][2].id=5;
prolist[3][2].channel=-1;
prolist[3][2].value=1;
prolist[3][2].next1=0;
prolist[3][2].next2=0;







prolist[4][0].id=3;
prolist[4][0].channel=1;
prolist[4][0].value=1;//发送的变量的值
prolist[4][0].next1=1;
prolist[4][0].next2=6;
prolist[4][1].id=11;
prolist[4][1].channel=-1;//不使用channnl的都为-1
prolist[4][1].value=1;//要移动到的位置
prolist[4][1].next1=2;
prolist[4][1].next2=3;
prolist[4][2].id=4;
prolist[4][2].channel=2;
prolist[4][2].value=2;
prolist[4][2].next1=0;
prolist[4][2].next2=0;
prolist[4][3].id=11;
prolist[4][3].channel=-1;//不使用channnl的都为-1
prolist[4][3].value=1;//要移动到的位置
prolist[4][3].next1=4;
prolist[4][3].next2=5;
prolist[4][4].id=4;
prolist[4][4].channel=3;//不使用channnl的都为-1
prolist[4][4].value=2;//要移动到的位置
prolist[4][4].next1=0;
prolist[4][4].next2=0;
prolist[4][5].id=12;
prolist[4][5].channel=-1;
prolist[4][5].value=-1;//发送的变量的值
prolist[4][5].next1=0;
prolist[4][5].next2=0;
prolist[4][6].id=12;
prolist[4][6].channel=-1;//不使用channnl的都为-1
prolist[4][6].value=-1;//要移动到的位置
prolist[4][6].next1=0;
prolist[4][6].next2=0;
*/


prolist[3][0].id=6;
prolist[3][0].channel=-1;
prolist[3][0].value=0;//发送的变量的值
prolist[3][0].next1=1;
prolist[3][0].next2=1;
prolist[3][1].id=11;
prolist[3][1].channel=-1;//不使用channnl的都为-1
prolist[3][1].value=0;//要移动到的位置
prolist[3][1].next1=2;
prolist[3][1].next2=3;
prolist[3][2].id=4;
prolist[3][2].channel=2;
prolist[3][2].value=1;
prolist[3][2].next1=6;
prolist[3][2].next2=6;
prolist[3][3].id=11;
prolist[3][3].channel=-1;//不使用channnl的都为-1
prolist[3][3].value=0;//要移动到的位置
prolist[3][3].next1=4;
prolist[3][3].next2=5;
prolist[3][4].id=4;
prolist[3][4].channel=3;//不使用channnl的都为-1
prolist[3][4].value=1;//要移动到的位置
prolist[3][4].next1=6;
prolist[3][4].next2=6;
prolist[3][5].id=12;
prolist[3][5].channel=-1;
prolist[3][5].value=-1;//发送的变量的值
prolist[3][5].next1=6;
prolist[3][5].next2=6;
prolist[3][6].id=5;
prolist[3][6].channel=-1;
prolist[3][6].value=1;//发送的变量的值
prolist[3][6].next1=7;
prolist[3][6].next2=7;
/*
prolist[5][0].id=3;
prolist[5][0].channel=2;
prolist[5][0].value=1;//发送的变量的值
prolist[5][0].next1=1;
prolist[5][0].next2=4;
prolist[5][1].id=9;
prolist[5][1].channel=0;//不使用channnl的都为-1
prolist[5][1].value=1;//要移动到的位置
prolist[5][1].next1=2;
prolist[5][1].next2=2;
prolist[5][2].id=5;
prolist[5][2].channel=-1;
prolist[5][2].value=1;
prolist[5][2].next1=3;
prolist[5][2].next2=3;
prolist[5][3].id=9;
prolist[5][3].channel=0;//不使用channnl的都为-1
prolist[5][3].value=0;//要移动到的位置
prolist[5][3].next1=0;
prolist[5][3].next2=0;
prolist[5][4].id=9;
prolist[5][4].channel=0;//不使用channnl的都为-1
prolist[5][4].value=0;//要移动到的位置
prolist[5][4].next1=0;
prolist[5][4].next2=0;


prolist[6][0].id=3;
prolist[6][0].channel=3;
prolist[6][0].value=1;//发送的变量的值
prolist[6][0].next1=1;
prolist[6][0].next2=4;
prolist[6][1].id=9;
prolist[6][1].channel=0;//不使用channnl的都为-1
prolist[6][1].value=1;//要移动到的位置
prolist[6][1].next1=2;
prolist[6][1].next2=2;
prolist[6][2].id=5;
prolist[6][2].channel=-1;
prolist[6][2].value=1;
prolist[6][2].next1=3;
prolist[6][2].next2=3;
prolist[6][3].id=9;
prolist[6][3].channel=0;//不使用channnl的都为-1
prolist[6][3].value=0;//要移动到的位置
prolist[6][3].next1=0;
prolist[6][3].next2=0;
prolist[6][4].id=9;
prolist[6][4].channel=0;//不使用channnl的都为-1
prolist[6][4].value=0;//要移动到的位置
prolist[6][4].next1=0;
prolist[6][4].next2=0;


/*
prolist[1][0].id=7;
prolist[1][0].channel=0;//不使用channnl的都为-1
prolist[1][0].value=1;//要移动到的位置
prolist[1][0].next1=1;
prolist[1][0].next2=1;
prolist[1][1].id=3;
prolist[1][1].channel=0;//不使用channnl的都为-1
prolist[1][1].value=1;//要移动到的位置
prolist[1][1].next1=2;
prolist[1][1].next2=2;
prolist[1][2].id=5;
prolist[1][2].channel=-1;//不使用channnl的都为-1
prolist[1][2].value=1;//要移动到的位置
prolist[1][2].next1=3;
prolist[1][2].next2=3;
prolist[1][3].id=13;
prolist[1][3].channel=-1;//不使用channnl的都为-1
prolist[1][3].value=1;//要移动到的位置
prolist[1][3].next1=0;
prolist[1][3].next2=0;

prolist[0][0].id=7;
prolist[0][0].channel=0;//不使用channnl的都为-1
prolist[0][0].value=1;//要移动到的位置
prolist[0][0].next1=1;
prolist[0][0].next2=1;
prolist[0][1].id=4;
prolist[0][1].channel=0;//不使用channnl的都为-1
prolist[0][1].value=1;//要移动到的位置
prolist[0][1].next1=2;
prolist[0][1].next2=2;
prolist[0][2].id=5;
prolist[0][2].channel=-1;//不使用channnl的都为-1
prolist[0][2].value=1;//要移动到的位置
prolist[0][2].next1=3;
prolist[0][2].next2=3;
prolist[0][3].id=13;
prolist[0][3].channel=-1;//不使用channnl的都为-1
prolist[0][3].value=1;//要移动到的位置
prolist[0][3].next1=0;
prolist[0][3].next2=0;
*/
prolist[4][0].id=3;
prolist[4][0].channel=2;
prolist[4][0].value=1;//发送的变量的值
prolist[4][0].next1=1;
prolist[4][0].next2=4;
prolist[4][1].id=9;
prolist[4][1].channel=0;//不使用channnl的都为-1
prolist[4][1].value=1;//要移动到的位置
prolist[4][1].next1=2;
prolist[4][1].next2=2;
prolist[4][2].id=5;
prolist[4][2].channel=-1;
prolist[4][2].value=1;
prolist[4][2].next1=3;
prolist[4][2].next2=3;
prolist[4][3].id=9;
prolist[4][3].channel=0;//不使用channnl的都为-1
prolist[4][3].value=0;//要移动到的位置
prolist[4][3].next1=5;
prolist[4][3].next2=5;
prolist[4][4].id=9;
prolist[4][4].channel=0;//不使用channnl的都为-1
prolist[4][4].value=0;//要移动到的位置
prolist[4][4].next1=5;
prolist[4][4].next2=5;


prolist[5][0].id=3;
prolist[5][0].channel=3;
prolist[5][0].value=1;//发送的变量的值
prolist[5][0].next1=1;
prolist[5][0].next2=4;
prolist[5][1].id=9;
prolist[5][1].channel=0;//不使用channnl的都为-1
prolist[5][1].value=1;//要移动到的位置
prolist[5][1].next1=2;
prolist[5][1].next2=2;
prolist[5][2].id=5;
prolist[5][2].channel=-1;
prolist[5][2].value=1;
prolist[5][2].next1=3;
prolist[5][2].next2=3;
prolist[5][3].id=9;
prolist[5][3].channel=0;//不使用channnl的都为-1
prolist[5][3].value=0;//要移动到的位置
prolist[5][3].next1=5;
prolist[5][3].next2=5;
prolist[5][4].id=9;
prolist[5][4].channel=0;//不使用channnl的都为-1
prolist[5][4].value=0;//要移动到的位置
prolist[5][4].next1=5;
prolist[5][4].next2=5;

}
</declaration>
	<template>
		<name>Moving1</name>
		<declaration>clock moving;
int l;
int id=-1;//调用这个自动机的进程id
int k=0;//要告诉本自动机的目标位置

bool satisfycondition( ){
return k-loc==1||loc-k==1;
}

</declaration>
		<location id="id0" x="-578" y="-161">
			<name x="-588" y="-195">Inital</name>
		</location>
		<location id="id1" x="-331" y="-161">
			<name x="-365" y="-204">Triggered</name>
		</location>
		<location id="id2" x="-25" y="-161">
			<name x="-51" y="-203">Endsuc</name>
		</location>
		<location id="id3" x="-51" y="-314">
			<name x="-61" y="-348">Endfail</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-408" y="-323">endtr[1]!</label>
			<label kind="assignment" x="-323" y="-374">proread[id]=
prolist[id][proread[id]].next2</label>
			<nail x="-382" y="-289"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="guard" x="-340" y="-280">moving&gt;=1&amp;&amp;!satisfycondition()</label>
			<label kind="assignment" x="-289" y="-246">moving=0</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-357" y="-110">endtr[1]!</label>
			<label kind="assignment" x="-296" y="-118">proread[id]=
prolist[id][proread[id]].next1</label>
			<nail x="-314" y="-76"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-272" y="-187">moving&gt;=1&amp;&amp;satisfycondition()</label>
			<label kind="assignment" x="-289" y="-153">loc=k,moving=0</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-501" y="-187">tr[1]?</label>
			<label kind="assignment" x="-493" y="-153">moving=0,id=currentid,
k=prolist[id ][proread[id] ].value</label>
			<nail x="-348" y="-161"/>
		</transition>
	</template>
	<template>
		<name>Iteration13</name>
		<declaration>int id=-1;
clock iteration;

void update(){
if(id==0&amp;&amp;model==1){
model=0;
}
if (id==0&amp;&amp;model==0){
model=1;
}

if(id==1&amp;&amp;tempeature&gt;=26){
tempeature=tempeature-26;
}
if (id==1&amp;&amp;tempeature&lt;26){
tempeature=tempeature+26;
}
}
</declaration>
		<location id="id4" x="-1462" y="-510">
			<name x="-1472" y="-544">Initial</name>
		</location>
		<location id="id5" x="-1156" y="-637">
			<name x="-1166" y="-671">Triggered</name>
		</location>
		<location id="id6" x="-892" y="-535">
			<urgent/>
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-1156" y="-450">endtr[13]!</label>
			<label kind="assignment" x="-1147" y="-399">iteration=0</label>
			<nail x="-1113" y="-408"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="assignment" x="-1138" y="-586">Initialsensor(),
Initialactuator()</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-1334" y="-612">tr[13]?</label>
			<label kind="assignment" x="-1334" y="-569">iteration=0,id=currentid,
proread[id]=0,update()</label>
		</transition>
	</template>
	<template>
		<name>Process</name>
		<parameter>const pid_t id</parameter>
		<declaration>
int quactid=-1;
int light=0;

void initial(){
proread[id]=0;
}

int query1(){
if (proread[id]&lt;prolen[id] ){
return prolist[id][proread[id]].id;
}
else{
return -1;
}
}

int receivex=id;
int receivex2=id;

// 对于本进程来说，当触发本自动机的时候要告诉我，触发的是那个进程。既要求我去读那个表,当读表的时候，应该根据动作的不同调用相对应的action,
//标记process读到的位置，以便于自动机取出想要的数据</declaration>
		<location id="id7" x="-646" y="-187">
			<name x="-656" y="-221">Initial</name>
		</location>
		<location id="id8" x="-357" y="-178">
			<name x="-399" y="-229">TriggeredProcess</name>
			<urgent/>
		</location>
		<location id="id9" x="-170" y="-178">
		</location>
		<location id="id10" x="0" y="-323">
			<name x="-10" y="-357">Triggeredact</name>
		</location>
		<location id="id11" x="17" y="-85">
			<name x="7" y="-119">Endprocess</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id11"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-501" y="-136">endp[id]!</label>
			<nail x="-493" y="-102"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-263" y="-280">endtr[quactid]?</label>
			<label kind="assignment" x="-339" y="-250">light=actable[id][0].value</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id11"/>
			<label kind="guard" x="-93" y="-161">quactid==-1</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="-42" y="-280">quactid&gt;=0</label>
			<label kind="synchronisation" x="-59" y="-246">tr[quactid]!</label>
			<label kind="assignment" x="-153" y="-246">currentid=id</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="assignment" x="-297" y="-170">quactid=query1()</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-544" y="-221">trp[id]?</label>
			<label kind="assignment" x="-552" y="-178">initial()</label>
		</transition>
	</template>
	<template>
		<name>Delay5</name>
		<declaration>clock delay;
//int test=0;
int id=0;//调用本自动机的process</declaration>
		<location id="id12" x="-620" y="-246">
			<name x="-630" y="-280">Initial</name>
		</location>
		<location id="id13" x="-433" y="-246">
			<name x="-459" y="-280">Triggered</name>
		</location>
		<location id="id14" x="-204" y="-246">
			<name x="-214" y="-280">Endsuc</name>
			<urgent/>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id14"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-468" y="-408">endtr[5]!</label>
			<label kind="assignment" x="-442" y="-374">proread[id]=
prolist[id][proread[id]].next1</label>
			<nail x="-460" y="-425"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="guard" x="-374" y="-280">delay&gt;=1</label>
			<label kind="assignment" x="-365" y="-238">delay=0</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-552" y="-272">tr[5]?</label>
			<label kind="assignment" x="-569" y="-238">delay=0,id=currentid</label>
		</transition>
	</template>
	<template>
		<name>Parallel1</name>
		<parameter>const pid_t id</parameter>
		<declaration>int bo;</declaration>
		<location id="id15" x="-1139" y="-442">
			<name x="-1149" y="-476">Initial</name>
		</location>
		<location id="id16" x="-909" y="-442">
			<name x="-926" y="-476">TriggeP1</name>
		</location>
		<location id="id17" x="-663" y="-442">
			<name x="-673" y="-476">TriggeredP1</name>
		</location>
		<init ref="id15"/>
		<transition>
			<source ref="id17"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-867" y="-391">endp[id]?</label>
			<nail x="-816" y="-348"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-824" y="-467">trp[id]!</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-1020" y="-467">a!</label>
			<label kind="assignment" x="-1054" y="-433">initialpro(),Initialsensor(),
Initialactuator()</label>
		</transition>
	</template>
	<template>
		<name>Parallel2</name>
		<parameter>const pid_t id</parameter>
		<location id="id18" x="-782" y="-195">
			<name x="-792" y="-229">Initial</name>
		</location>
		<location id="id19" x="-535" y="-195">
			<name x="-545" y="-229">Trigggered</name>
		</location>
		<location id="id20" x="-229" y="-195">
			<name x="-239" y="-229">TriggeredProcess</name>
		</location>
		<init ref="id18"/>
		<transition>
			<source ref="id20"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-425" y="-136">endp[id]?</label>
			<nail x="-391" y="-93"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-442" y="-221">trp[id]!</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-654" y="-212">a?</label>
		</transition>
	</template>
	<template>
		<name>BroadcastInput3</name>
		<declaration>clock x;
bool receive=false;
int id=-1;
int cid=0;
int xid=0;</declaration>
		<location id="id21" x="-493" y="-144">
			<name x="-503" y="-178">Initial</name>
		</location>
		<location id="id22" x="-211" y="-144">
			<name x="-187" y="-136">Triggered</name>
		</location>
		<location id="id23" x="161" y="-255">
			<name x="151" y="-289">Endfail</name>
		</location>
		<location id="id24" x="-357" y="-314">
			<name x="-367" y="-348">Endsuc</name>
		</location>
		<init ref="id21"/>
		<transition>
			<source ref="id22"/>
			<target ref="id23"/>
			<label kind="guard" x="-102" y="-255">x&gt;=1</label>
			<label kind="assignment" x="-119" y="-187">x=0</label>
			<nail x="-195" y="-170"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id24"/>
			<label kind="guard" x="-297" y="-306">receive==true&amp;&amp;
x&lt;1</label>
			<label kind="assignment" x="-280" y="-255">x=0</label>
			<nail x="-221" y="-178"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-450" y="-263">endtr[3]!</label>
			<label kind="assignment" x="-475" y="-229">proread[id]=
prolist[id][proread[id]].next1</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-144" y="-8">endtr[3]!</label>
			<label kind="assignment" x="-51" y="-93">proread[id]=
prolist[id][proread[id]].next2</label>
			<nail x="-136" y="-17"/>
			<nail x="-246" y="51"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="-195" y="-93">broc[cid]?</label>
			<label kind="assignment" x="-272" y="-59">X[id][prolist[id]
[proread[id]].value]=brcv,
receive=true</label>
			<nail x="-272" y="-17"/>
			<nail x="-187" y="-34"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="-382" y="-162">tr[3]?</label>
			<label kind="assignment" x="-425" y="-136">x=0,receive=false,
id=currentid,
cid=prolist[id][proread[id]].channel</label>
		</transition>
	</template>
	<template>
		<name>BroadcastOutput4</name>
		<declaration>clock broadcastoutput;
int id=-1;
int cid=0;</declaration>
		<location id="id25" x="-824" y="-340">
			<name x="-834" y="-374">Initial</name>
		</location>
		<location id="id26" x="-561" y="-340">
			<name x="-571" y="-374">Triggered</name>
			<urgent/>
		</location>
		<location id="id27" x="-204" y="-357">
			<name x="-214" y="-391">Endsuc</name>
		</location>
		<init ref="id25"/>
		<transition>
			<source ref="id27"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-561" y="-229">endtr[4]!</label>
			<label kind="assignment" x="-518" y="-280">proread[id]=
prolist[id][proread[id]].next1</label>
			<nail x="-535" y="-246"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="-493" y="-365">broc[cid]!</label>
			<label kind="assignment" x="-501" y="-340">broadcastoutput=0,
brcv=X[id][prolist[id][proread[id]].value]</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="-714" y="-365">tr[4]?</label>
			<label kind="assignment" x="-731" y="-340">broadcastoutput=0,id=currentid,
cid=prolist[id][proread[id]].channel</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">LocInput0</name>
		<declaration>// Place local declarations here.
clock locinput;
int id=-1;//调用这个自动机的进程id
int cid=0;
int xid=0;

</declaration>
		<location id="id28" x="-790" y="-331">
			<name x="-800" y="-365">Initial</name>
		</location>
		<location id="id29" x="-508" y="-331">
			<name x="-544" y="-374">Triggered</name>
		</location>
		<location id="id30" x="-51" y="-323">
			<name x="-61" y="-357">Endsuc</name>
		</location>
		<location id="id31" x="-289" y="-527">
			<name x="-297" y="-561">Endfail</name>
		</location>
		<init ref="id28"/>
		<transition>
			<source ref="id31"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="-569" y="-459">endtr[0]!</label>
			<label kind="assignment" x="-772" y="-429">proread[id]=
prolist[id][proread[id]].next2</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id31"/>
			<label kind="guard" x="-484" y="-450">locinput&gt;=1</label>
			<label kind="assignment" x="-425" y="-416">locinput=0</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="-484" y="-263">endtr[0]!</label>
			<label kind="assignment" x="-407" y="-272">proread[id]=
prolist[id][proread[id]].next1</label>
			<nail x="-425" y="-221"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id30"/>
			<label kind="guard" x="-391" y="-348">locinput&lt;1</label>
			<label kind="synchronisation" x="-297" y="-382">c[cid ]?</label>
			<label kind="assignment" x="-434" y="-297">X[id][prolist[id][proread[id]].value]=cv,
locinput=0</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-688" y="-357">tr[0]?</label>
			<label kind="assignment" x="-705" y="-331">locinput=0,id=currentid,
cid=prolist[id][proread[id]].channel</label>
		</transition>
	</template>
	<template>
		<name>LocOutput2</name>
		<declaration>clock locoutput;
int id=-1;//要调用本自动机的process id
int cid=0;
</declaration>
		<location id="id32" x="-399" y="-136">
			<name x="-416" y="-178">Initial</name>
		</location>
		<location id="id33" x="-102" y="-136">
		</location>
		<location id="id34" x="178" y="-238">
			<name x="168" y="-272">Endsuc</name>
		</location>
		<location id="id35" x="161" y="-17">
			<name x="151" y="-51">Endfail</name>
		</location>
		<init ref="id32"/>
		<transition>
			<source ref="id35"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="-229" y="-8">endtr[2]!</label>
			<nail x="-229" y="34"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="-144" y="-331">endtr[2]!</label>
			<nail x="-136" y="-365"/>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id35"/>
			<label kind="guard" x="0" y="-119">locoutput&gt;=1</label>
			<label kind="assignment" x="-59" y="-93">locoutput=0,
proread[id]=
prolist[id][proread[id]].next2</label>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id34"/>
			<label kind="synchronisation" x="-17" y="-221">c[cid]!</label>
			<label kind="assignment" x="-17" y="-204">locoutput=0,
cv=X[id][prolist[id][proread[id]].value],
proread[id]=
prolist[id][proread[id]].next1</label>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="-289" y="-170">tr[2]?</label>
			<label kind="assignment" x="-306" y="-127">locoutput=0,id=currentid,
cid=prolist[id][proread[id]].channel</label>
		</transition>
	</template>
	<template>
		<name>QueryLocation6</name>
		<declaration>clock que;
int id=-1;
void update(){
if(id==2){
prolist[id][9].value=querylocation+1;
prolist[id][12].value=querylocation-1;
}
}</declaration>
		<location id="id36" x="-646" y="-221">
			<name x="-656" y="-255">Initial</name>
		</location>
		<location id="id37" x="-425" y="-229">
			<name x="-450" y="-263">Triggered</name>
			<urgent/>
		</location>
		<location id="id38" x="-195" y="-229">
			<name x="-212" y="-263">Endsuc</name>
		</location>
		<init ref="id36"/>
		<transition>
			<source ref="id38"/>
			<target ref="id36"/>
			<label kind="synchronisation" x="-399" y="-306">endtr[6]!</label>
			<label kind="assignment" x="-416" y="-374">proread[id]=
prolist[id][proread[id]].next1,
update()</label>
			<nail x="-357" y="-331"/>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id38"/>
			<label kind="guard" x="-348" y="-255">que&gt;=0</label>
			<label kind="assignment" x="-391" y="-221">querylocation=loc,que=0,
X[id][prolist[id]
[proread[id]].value]=querylocation</label>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id37"/>
			<label kind="synchronisation" x="-544" y="-246">tr[6]?</label>
			<label kind="assignment" x="-569" y="-212">que=0,id=currentid</label>
		</transition>
	</template>
	<template>
		<name>ReadSensor7</name>
		<declaration>clock readsensor;
int update=0;
int id=0;

</declaration>
		<location id="id39" x="-1513" y="-569">
			<name x="-1523" y="-603">Initial</name>
		</location>
		<location id="id40" x="-1309" y="-569">
			<name x="-1335" y="-612">Triggered</name>
			<urgent/>
		</location>
		<location id="id41" x="-1105" y="-569">
			<name x="-1115" y="-603">Endsuc</name>
		</location>
		<init ref="id39"/>
		<transition>
			<source ref="id41"/>
			<target ref="id39"/>
			<label kind="synchronisation" x="-1343" y="-663">endtr[7]!</label>
			<label kind="assignment" x="-1377" y="-731">proread[id]=
prolist[id][proread[id]].next2</label>
			<nail x="-1326" y="-680"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id41"/>
			<label kind="guard" x="-1266" y="-603">readsensor&gt;=0</label>
			<label kind="assignment" x="-1249" y="-544">readsensorvalue=Querysensor(id,sensorid),
readsensor=0,
X[id][prolist[id]
[proread[id]].value]=readsensorvalue</label>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id40"/>
			<label kind="synchronisation" x="-1436" y="-586">tr[7]?</label>
			<label kind="assignment" x="-1513" y="-552">readsensor=0,id=currentid,
sensorid=prolist[id][proread[id]].channel</label>
		</transition>
	</template>
	<template>
		<name>Sensor8</name>
		<declaration>clock sensor;
int id=-1;
int sensorid=0;
int v3=0;
</declaration>
		<location id="id42" x="-714" y="-238">
			<name x="-724" y="-272">Initial</name>
		</location>
		<location id="id43" x="-476" y="-331">
			<name x="-510" y="-374">Triggered</name>
			<urgent/>
		</location>
		<location id="id44" x="-85" y="-170">
			<name x="-102" y="-212">Changed</name>
		</location>
		<location id="id45" x="-178" y="-442">
			<name x="-188" y="-476">Unchanged</name>
		</location>
		<init ref="id42"/>
		<transition>
			<source ref="id45"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="-543" y="-454">endtr[8]!</label>
			<label kind="assignment" x="-543" y="-437">proread[id]=
prolist[id][proread[id]].next2</label>
			<nail x="-561" y="-433"/>
		</transition>
		<transition>
			<source ref="id43"/>
			<target ref="id45"/>
			<label kind="guard" x="-255" y="-408">sensor&gt;=0&amp;&amp;
Querysensor(id,sensorid)==v3</label>
			<label kind="assignment" x="-323" y="-382">sensor=0</label>
			<nail x="-408" y="-357"/>
		</transition>
		<transition>
			<source ref="id44"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="-484" y="-178">endtr[8]!</label>
			<label kind="assignment" x="-365" y="-170">proread[id]=
prolist[id][proread[id]].next2</label>
			<nail x="-459" y="-187"/>
		</transition>
		<transition>
			<source ref="id43"/>
			<target ref="id44"/>
			<label kind="guard" x="-348" y="-331">sensor&gt;=0&amp;&amp;
Querysensor(id,sensorid)!=v3</label>
			<label kind="assignment" x="-357" y="-272">Updatesensor(id,sensorid,v3),
sensor=0</label>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-612" y="-331">tr[8]?</label>
			<label kind="assignment" x="-612" y="-280">sensor=0,id=currentid,
v3=prolist[id][proread[id]].value,
sensorid=prolist[id][proread[id]].channel</label>
		</transition>
	</template>
	<template>
		<name>WriterActuator9</name>
		<declaration>clock writeract;
int id=-1;
int actid=0;
int v3=0;</declaration>
		<location id="id46" x="-654" y="-212">
			<name x="-664" y="-246">Initial</name>
		</location>
		<location id="id47" x="-408" y="-306">
			<name x="-433" y="-348">Triggered</name>
			<urgent/>
		</location>
		<location id="id48" x="-161" y="-212">
			<name x="-178" y="-246">Changed</name>
		</location>
		<location id="id49" x="-127" y="-433">
			<name x="-137" y="-467">Unchanged</name>
		</location>
		<init ref="id46"/>
		<transition>
			<source ref="id49"/>
			<target ref="id46"/>
			<label kind="synchronisation" x="-510" y="-433">endtr[9]!</label>
			<label kind="assignment" x="-492" y="-416">proread[id]=
prolist[id][proread[id]].next2,
boiler=v3</label>
			<nail x="-510" y="-399"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id49"/>
			<label kind="guard" x="-348" y="-382">Queryactuator(id,actid)==v3&amp;&amp;
writeract&gt;=0</label>
			<label kind="assignment" x="-306" y="-340">writeract=0</label>
			<nail x="-391" y="-314"/>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id46"/>
			<label kind="synchronisation" x="-425" y="-153">endtr[9]!</label>
			<label kind="assignment" x="-381" y="-165">proread[id]=
prolist[id][proread[id]].next2,
boiler=v3</label>
			<nail x="-399" y="-119"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id48"/>
			<label kind="guard" x="-323" y="-297">Queryactuator(id,actid)!=v3&amp;&amp;
writeract&gt;=0</label>
			<label kind="assignment" x="-357" y="-246">writeract=0,
Updateactuator(id,actid,v3)</label>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id47"/>
			<label kind="synchronisation" x="-544" y="-297">tr[9]?</label>
			<label kind="assignment" x="-561" y="-255">writeract=0,
id=currentid,
v3=prolist[id][proread[id]].value,
actid=prolist[id][proread[id]].channel</label>
		</transition>
	</template>
	<template>
		<name>Actuator10</name>
		<declaration>clock actuator;
int id=-1;
int actid=-1;
int shwid=-1;

</declaration>
		<location id="id50" x="-782" y="-246">
			<name x="-792" y="-280">Initial</name>
		</location>
		<location id="id51" x="-450" y="-348">
			<name x="-460" y="-382">Triggered</name>
			<urgent/>
		</location>
		<location id="id52" x="-136" y="-246">
			<name x="-146" y="-280">Endsuc</name>
		</location>
		<init ref="id50"/>
		<transition>
			<source ref="id52"/>
			<target ref="id50"/>
			<label kind="synchronisation" x="-425" y="-170">endtr[10]!</label>
			<label kind="assignment" x="-356" y="-186">proread[id]=
prolist[id][proread[id]].next2</label>
			<nail x="-374" y="-127"/>
		</transition>
		<transition>
			<source ref="id51"/>
			<target ref="id52"/>
			<label kind="assignment" x="-365" y="-365">actuator=0,
showact[id][shwid]=Queryactuator(id,actid)</label>
		</transition>
		<transition>
			<source ref="id50"/>
			<target ref="id51"/>
			<label kind="synchronisation" x="-629" y="-331">tr[10]?</label>
			<label kind="assignment" x="-671" y="-280">actuator=0,id=currentid,
actid=prolist[id][proread[id]].channel,
shwid=prolist[id][proread[id]].value</label>
		</transition>
	</template>
	<template>
		<name>Choice11</name>
		<declaration>clock choice;
int id=-1;
/*bool judge(){
if(id==0&amp;&amp;prolist[id][proread[id]].value==1)
{
return true;
}
if(id==1&amp;&amp;prolist[id][proread[id]].value==1&amp;&amp;X[1][1]==1)
{
return true;
}
if(id==1&amp;&amp;prolist[id][proread[id]].value==1&amp;&amp;X[1][1]==0)
{
return false;
}
if(id==1&amp;&amp;prolist[id][proread[id]].value==2&amp;&amp;X[1][2]&lt;throsad)
{
return true;
}
if(id==1&amp;&amp;prolist[id][proread[id]].value==2&amp;&amp;X[1][2]&gt;=throsad)
{
return false;
}
else return false;
}
*/
bool judge(){

if(id==2&amp;&amp;prolist[id][proread[id]].value==0&amp;&amp;X[2][0]==1)
{
return true;
}
else if(id==2&amp;&amp;prolist[id][proread[id]].value==0&amp;&amp;X[2][0]==4)
{
return true;
}
if(id==3&amp;&amp;prolist[id][proread[id]].value==0&amp;&amp;proread[id]==1&amp;&amp;X[3][0]==1)
{
return true;
}
else if(id==3&amp;&amp;prolist[id][proread[id]].value==0&amp;&amp;proread[id]==3&amp;&amp;X[3][0]==3)
{
return true;
}
else return false;
}
</declaration>
		<location id="id53" x="-1300" y="-391">
			<name x="-1310" y="-425">Initial</name>
		</location>
		<location id="id54" x="-1062" y="-391">
			<name x="-1072" y="-425">Judge</name>
			<urgent/>
		</location>
		<location id="id55" x="-892" y="-501">
			<name x="-902" y="-535">TriggeredP</name>
		</location>
		<location id="id56" x="-705" y="-306">
			<name x="-731" y="-289">TriggeredQ</name>
		</location>
		<init ref="id53"/>
		<transition>
			<source ref="id56"/>
			<target ref="id53"/>
			<label kind="synchronisation" x="-1164" y="-314">endtr[11]!</label>
			<nail x="-1147" y="-280"/>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id53"/>
			<label kind="synchronisation" x="-1130" y="-569">endtr[11]!</label>
			<nail x="-1105" y="-544"/>
		</transition>
		<transition>
			<source ref="id54"/>
			<target ref="id56"/>
			<label kind="guard" x="-986" y="-391">!judge()</label>
			<label kind="assignment" x="-1037" y="-357">choice=0,
proread[id]=prolist[id][proread[id]].next2</label>
		</transition>
		<transition>
			<source ref="id54"/>
			<target ref="id55"/>
			<label kind="guard" x="-1011" y="-484">judge()</label>
			<label kind="assignment" x="-1003" y="-433">choice=0,proread[id]=prolist[id][proread[id]].next1</label>
		</transition>
		<transition>
			<source ref="id53"/>
			<target ref="id54"/>
			<label kind="synchronisation" x="-1207" y="-416">tr[11]?</label>
			<label kind="assignment" x="-1224" y="-382">choice=0,id=currentid</label>
		</transition>
	</template>
	<template>
		<name>Skip12</name>
		<declaration>clock skip;
int id=-1;</declaration>
		<location id="id57" x="-807" y="-170">
			<name x="-817" y="-204">Initial</name>
		</location>
		<location id="id58" x="-170" y="-161">
			<name x="-180" y="-195">Triggered</name>
			<urgent/>
		</location>
		<init ref="id57"/>
		<transition>
			<source ref="id58"/>
			<target ref="id57"/>
			<label kind="synchronisation" x="-476" y="-323">endtr[12]!</label>
			<label kind="assignment" x="-510" y="-280">skip=0,
proread[id]=prolist[id][proread[id]].next1</label>
			<nail x="-519" y="-319"/>
		</transition>
		<transition>
			<source ref="id57"/>
			<target ref="id58"/>
			<label kind="synchronisation" x="-561" y="-212">tr[12]?</label>
			<label kind="assignment" x="-561" y="-187">skip=0,
id=currentid</label>
		</transition>
	</template>
	<system>// Place template instantiations here.


pro1=Process(0);
pro2=Process(1);
par1=Parallel1(0);
par2=Parallel2(1);
temp=ReadSensor7();//temp

// List one or more processes to be composed into a system.
system  pro1,par1,pro2,par2, Sensor8,temp,Actuator10,WriterActuator9,Skip12,Choice11,Iteration13,BroadcastInput3,BroadcastOutput4,Delay5;
</system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; BroadcastInput3.Endsuc&amp;&amp;model==1 imply boiler==1</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; temp.Endsuc&amp;&amp;model==0&amp;&amp;tempeature&lt;throsad </formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; temp.Endsuc&amp;&amp;model==0&amp;&amp;tempeature&gt;=throsad imply boiler==0</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; temp.Endsuc&amp;&amp;model==0&amp;&amp;tempeature&lt;throsad</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A&lt;&gt; temp.Endsuc&amp;&amp;model==0&amp;&amp;tempeature&lt;throsad imply boiler==1</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
